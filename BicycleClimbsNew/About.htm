<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
    <title>&nbsp;Bicycle Climbs of Seattle</title>

    <script src="http://maps.google.com/maps?file=api&v=1&key=ABQIAAAAiZoAf08AX4ClzrJYaSSV9xTBqWC_ogAKx9eKDib7mMgLWMMJihSZyN8JqLbPnobFKQ6qF5XkAEZRDg" type="text/javascript"></script>
    <script type="text/javascript">
    //<![CDATA[

var markerArr;
var infoStorage;
var map;

// Creates a marker whose info window displays the given number
function createMarker(point, number, xmlMarker, info) {

  var iconTags = xmlMarker.getElementsByTagName("icon");
  var iconTag = iconTags[0];
  var filename = iconTag.getAttribute("image");

  var icon = new GIcon();
  icon.image = filename;
  icon.iconSize = new GSize(20, 34);
  icon.shadowSize = new GSize(37, 34);
  icon.iconAnchor = new GPoint(9, 34);
  icon.infoWindowAnchor = new GPoint(9, 2);
  icon.infoShadowAnchor = new GPoint(18, 25);
  
  var marker = new GMarker(point, icon);

  GEvent.addListener(marker, "click", function() {
    marker.openInfoWindowXslt(info, "/climbs.xsl"); 
  });

  return marker;
}
   
// Open the info box for the specified marker.
function popup( i )
{
    markerArr[i].openInfoWindowXslt( infoStorage[i], "/climbs.xsl" );
    map.zoomTo(5);
}
 
function onLoad() {
	      // Using XML and Asynchronous RPC ("AJAX") with Maps
	      //
	      // In this example, we download a static file ("data.xml") that contains a
	      // list of lat/lng coordinates in XML. When the download completes, we parse
	      // the XML and create a marker at each of those lat/lngs.
      
	      // Center the map on Palo Alto
	map = new GMap(document.getElementById("map"));
	map.addControl(new GSmallMapControl());
	map.addControl(new GMapTypeControl());
      //map.centerAndZoom(new GPoint(-122.141944, 37.441944), 4);
 
	var panel = document.getElementById( 'panel' );
     
      // Download the data in data.xml and load it on the map. The format we
      // expect is:
      // <markers>
      //   <marker lat="37.441" lng="-122.141"/>
      //   <marker lat="37.322" lng="-121.213"/>
      // </markers>
	var request = GXmlHttp.create();
		//request.open("GET", "newxmlversion3.xml", true);
	request.open("GET", "climbs.xml", true);
	request.onreadystatechange = function() 
	{
		if (request.readyState == 4) 
		{
			var xmlDoc = request.responseXML;
          
			var center = xmlDoc.documentElement.getElementsByTagName("center"); 
 	    	var lng = parseFloat (center[0].getAttribute( "lng"));
 	    	var lat = parseFloat (center[0].getAttribute( "lat"));

        	map.centerAndZoom( new GPoint( lng, lat ), 7 ); 
          
        	var locations = xmlDoc.documentElement.getElementsByTagName("location");
        	infoStorage = new Array( locations.length );
			var panelText = "";

			markerArr = new Array(locations.length);

        	for (var i = 0; i < locations.length; i++)
        	{
				var points = locations[i].getElementsByTagName("point");
				lat = parseFloat(points[0].getAttribute("lat"));
				lng = parseFloat(points[0].getAttribute("lng"));
				var point = new GPoint(lng, lat);
			
				var info = locations[i].getElementsByTagName("info")[0];
				infoStorage[i] = info;
  
				var marker = createMarker(point, i + 1, locations[i], info);
			
				map.addOverlay(marker);
				markerArr[i] = marker;
    			
  				var titles = info.getElementsByTagName("title");
  				
	    		var link = '<a href="javascript:popup( ' + i + ' )">';
  				  				
  				panelText += link;
  				
  				var title = titles[0];
  				panelText += title.firstChild.nodeValue;
 				panelText += "</A><br>";

       	}
         	panel.innerHTML = panelText;

         //var page = xmlDoc.documentElement.getElementsByTagName("page");
          
         //var markers = xmlDoc.documentElement.getElementsByTagName("marker");
         //for (var i = 0; i < markers.length; i++) {
         // var point = new GPoint(parseFloat(markers[i].getAttribute("lng")),
         //                      parseFloat(markers[i].getAttribute("lat")));
   		 // var marker = createMarker(point, i + 1, markers[i]);
         //map.addOverlay(marker);
         //}
          
         	panelText += "</table>";
         	//panel.innerHTML = panelText;
		}
    };
   	request.send(null);
}

    //]]>
    </script>
  </head>
  <body onload="onLoad()" bgcolor="#CCFFFF">
    <table border="0" cellspacing="1" id="table1" bgcolor="#000000" cellpadding="5">
		<tr>
			<td width="210" align="center"><font size="5" color="#FFFFFF">BicycleClimbs.com</font><p align="left">
			<font color="#FF0000" face="Arial Black" size="2"><i>Because pain is 
			the sign of <br>
			weakness leaving your body</i></font></td>
			<td width="728" height="90"><script type="text/javascript"><!--
google_ad_client = "pub-5589402870024226";
google_ad_width = 728;
google_ad_height = 90;
google_ad_format = "728x90_as";
google_ad_type = "text_image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></td>
		</tr>
		</table>
		
   <table border="0" cellspacing="1" id="table1" bgcolor="#000000" cellpadding="5" width="961">
		<tr>
			<td align="center" width="133">
			<font face="Arial Black" size="2" color="#FFCC00">
			<a href="/climbsnew.htm"><font color="#FFCC00">
			<span style="text-decoration: none">Home</span></font></a></font>me</td>			
			<td align="center" width="163">
			<font face="Arial Black" color="#FFCC00" size="2">
			<a href="Lists.htm"><font color="#FFCC00">
			<span style="text-decoration: none">Lists of Climbs</span></font></a></font></td>			
			<td align="center" width="157">
			<font size="2" color="#FFCC00" face="Arial Black">
			<a href="about.htm"><font color="#FFCC00">
			<span style="text-decoration: none">About</span></font></a></font></td>
			<td align="center" width="151">
			<font face="Arial Black" size="2" color="#FFCC00">
			<a style="color: #FFCC00; text-decoration: none" href="FullRSS.xml">RSS Feed</a></font></td>
			<td align="center" width="320">
			&nbsp;</tr>
	</table>
		
	<h2>About BicycleClimbs.com</h2>
	<p>I live in the Seattle area, at the top of a hill, and that means that for 
	most of my rides, I have a climb of a few hundred feet to get back to my 
	house. When I first started riding more seriously, I started looking for the 
	easiest way to get home. As you know, it&#39;s not very easy to tell the 
	gradient of a climb when you drive it, so I started asking around on the 
	Microsoft bicycling message board, and got some good tips. This scene was 
	repeated as other people started cycling.</p>
	<p>But there was no good list of climbs - both for the people who wanted to 
	find the climbs, and for those who wanted to avoid them. There was a list of 
	a few climbs maintained by Larry Kemp, but it didn&#39;t list all the ones I 
	cared about, and with Larry&#39;s tragic death in the spring of 2004, there was 
	a void to be filled.</p>
	<p>I&#39;d been toying with measure gradients for a while. There are small level 
	vials that you can get that mount on your bike, GPS-based bicycle computers, 
	barometric bicycle computers, and topographical programs. I even wrote a
	<a href="http://blogs.msdn.com/ericgu/archive/2003/10/10/52754.aspx">C# 
	program</a> that worked with my GPS hooked to my laptop, so I could drive 
	around and measure hills. I ended up buying
	<a href="http://blogs.msdn.com/ericgu/archive/2005/05/06/415236.aspx">Topo 
	USA</a> from Delorme a few months ago. </p>
	<p>Then everything simmered on the back burner until Google Maps showed up, 
	and that led to this site. </p>
	<h2>Adding Climbs</h2>
      <p>
          You can now enter climbs
	dynamically. To get started:</p>
      <ol>
          <li>Goto to the login page, and create a login</li>
          <li>Send me an <a href="mailto:ericgu@microsoft.com">email</a> asking for access to
              create climbs. If you want to enter them for a new region, tell me what the region
              is. </li>
      </ol>
	<h2>
        Data Sources and Quality</h2>
      <p>
          The elevation data that drives the site comes from the <a href="http://gisdata.usgs.net/XmlWebServices/TNM_Elevation_Service.php">
              USGS</a>. The system takes the route that is drawn on the map, figures out the
          low and high points, and then uses those points to determine the elevation gain,
          length, and to draw the graph.</p>
      <p>
          The USGS data is pretty good over the distance of a climb, so if it says that a
          climb has 245 feet of elevation gain, that's probably pretty close to the real value.
          Due to the noise in the data, however, it's not very good to figure out the gradient
          along the way, so the graphs may not reflect reality.</p>
      <p>
          The maximum gradient is a guess, and if you have a better value than listed, let
          me know.</p>
      <p>
          &nbsp;</p>
	<p>&nbsp;</p>
  </body>
</html>
